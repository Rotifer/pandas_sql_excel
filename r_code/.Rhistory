library(tidyverse)
data_filepath <- file.join(Sys.getenv("HOME"), "pandas_sql_excel", "notebooks/data/prem_league_final_tables.tsv")
data_filepath <- join.file(Sys.getenv("HOME"), "pandas_sql_excel", "notebooks/data/prem_league_final_tables.tsv")
?file
??join
??file
data_filepath <- file.path(Sys.getenv("HOME"), "pandas_sql_excel", "notebooks/data/prem_league_final_tables.tsv")
efl_tables_tb <- readr::read_delim(data_filepath, delim="\t")
dims(efl_tables_tb)
ncol(efl_tables_tb)
unique(efl_tables_tb$season)
length(unique(efl_tables_tb$season))
View(efl_tables_tb)
top3_bu_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(points_total)) %>%
top3_bu_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(points_total) %>%
group_by(season) %>%
slice(1:3)
top3_by_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(points_total) %>%
group_by(season) %>%
slice(1:3)
View(top3_by_season)
top3_bu_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(desc(points_total)) %>%
group_by(season) %>%
slice(1:3)
View(top3_by_season)
View(top3_bu_season)
top3_by_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(desc(points_total)) %>%
group_by(season) %>%
slice(1:3)
top3_by_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(desc(points_total)) %>%
group_by(season) %>%
slice(1:3) %>%
filter(season = "2011-2012")
top3_by_season <- efl_tables_tb %>%                                      # Top N highest values by group
arrange(desc(points_total)) %>%
group_by(season) %>%
slice(1:3) %>%
filter(season == "2011-2012")
test_ordering <- tibble(season = c("2011-2012"), club_name = c("Manchester Utd", "Manchester City", "Arsenal"), goal_difference = c(64, 56, 25), points = c(89, 89, 70))
View(test_ordering)
test_ordering <- tibble(season = c("2011-2012"), club_name = c("Manchester City", "Manchester Utd", "Arsenal"), goal_difference = c(56, 64, 25), points = c(89, 89, 70))
winner_20112012 <- test_ordering %>%
arrange(desc(points)) %>%
group_by(season) %>%
slice(1:3)
View(winner_20112012)
View(efl_tables_tb)
install.packages("RPostgres")
?dbWriteTable
names(efl_tables_tb)
seasons_games_filepath <- file.path(Sys.getenv("HOME"), "SHARED_DATA", "epl_2000_to_2018_final_dataset.csv")
seasons_games_2000_2018 <- readr::read_csv(seasons_games_filepath)
View(seasons_games_2000_2018)
select(seasons_games_2000_2018, c("Date", "HomeTeam", "AwayTeam", "FTHG", "FTAG"))
seasons_2000_to_2018_tokeep <- select(seasons_games_2000_2018, c("Date", "HomeTeam", "AwayTeam", "FTHG", "FTAG"))
names(seasons_2000_to_2018_tokeep) <- c("match_date", "home_club", "away_club", "home_club_score", "away_club_score")
View(seasons_2000_to_2018_tokeep)
readr::write_excel_csv(seasons_games_2000_2018, file.path(Sys.getenv("HOME"), "SHARED_DATA", "seasons_games_2000_to_2018.csv")
)
readr::write_excel_csv(seasons_2000_to_2018_tokeep, file.path(Sys.getenv("HOME"), "SHARED_DATA", "seasons_games_2000_to_2018.csv"))
epl_30_seasons_1992_2022 <- readr::read_delim(file.path(Sys.getenv("HOME"), "SHARED_DATA", "epl_games_seasons_1992-93_to_2021-22.txt", delim="\t")
)
epl_30_seasons_1992_2022 <- readr::read_delim(file.path(Sys.getenv("HOME"), "SHARED_DATA", "epl_games_seasons_1992-93_to_2021-22.txt"), delim="\t")
View(epl_30_seasons_1992_2022)
library(DBI)
library(tidyverse)
epl_30_seasons_1992_2022 <- readr::read_delim(file.path(Sys.getenv("HOME"), "SHARED_DATA", "epl_games_seasons_1992-93_to_2021-22.txt"), delim="\t")
con <- dbConnect(RPostgres::Postgres(),dbname = 'epl',
host = '127.0.0.1', # i.e. 'ec2-54-83-201-96.compute-1.amazonaws.com'
port = 5432, # or any other port specified by your DBA
user = 'mfm45656',
password = '')
DBI::dbWriteTable(con, "epl_matches", epl_30_seasons_1992_2022, overwrite=TRUE, field.types = c(season="TEXT",
match_date="DATE",
home_club="TEXT",
away_club="TEXT",
home_club_score="INTEGER",
away_club_score="INTEGER"))
DBI::dbDisconnect(con)
